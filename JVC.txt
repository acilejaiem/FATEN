Data is printed, or logged, to the console, a panel that displays messages, with console.log().
We can write single-line 
Preview: Docs Loading link description
comments
 with // and multi-line comments between /* and */.
There are 8 fundamental 
Preview: Docs Loading link description
data types
 in JavaScript: numbers, BigInts, 
Preview: Docs Loading link description
strings
, booleans, null, undefined, symbols, and 
Preview: Docs Loading link description
objects
.
Numbers are any number without quotes: 23.8879
Strings are characters wrapped in single or double quotes: 'Sample String'
The built-in arithmetic 
Preview: Docs Loading link description
operators
 include +, -, *, /, and %.
Objects, including instances of data types, can have properties that store information. The properties are denoted with a . after the name of the object, for example: 'Hello'.length.
Objects, including instances of data types, can have 
Preview: Docs Loading link description
methods
 that perform actions. Methods are called by appending the object or instance with a period, the method name, and parentheses. For example: 'hello'.toUpperCase().
We can access properties and methods by using the ., dot operator.
Built-in objects, including Math, are collections of methods and properties that JavaScript provides.
Let’s review what we learned:

Variables hold reusable data in a program and associate it with a name.
Variables are stored in memory.
The var keyword is used in pre-ES6 versions of JS.
let is the preferred way to declare a variable when it can be reassigned, and const is the preferred way to declare a variable with a constant value.
Variables that have not been initialized store the primitive data type undefined.
Mathematical assignment operators make it easy to calculate a new value and assign it to the same variable.
The + operator is used to concatenate strings, including string values held in variables.
In ES6, template literals use backticks ` and ${} to interpolate values into a string.
The typeof keyword returns the data type (as a string) of a value.
Instructions
To learn more about variables take on these challenges!

Create variables and manipulate the values.
Check what happens when you try concatenating strings using variables of different data types.
Interpolate multiple variables into a string.
See what happens when you use console.log() on variables declared by different keywords (const, let, var) before they’re defined. For example:
console.log(test1);

const test1 = 'figuring out quirks';

Copy to Clipboard

Find the data type of a variable’s value using the typeof keyword on a variable.
Use typeof to find the data type of the resulting value when you concatenate variables containing two different data types.